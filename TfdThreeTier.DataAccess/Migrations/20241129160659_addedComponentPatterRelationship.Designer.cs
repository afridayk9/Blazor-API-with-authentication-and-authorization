// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TfdThreeTier.DataAccess.Data;

#nullable disable

namespace TfdThreeTier.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241129160659_addedComponentPatterRelationship")]
    partial class addedComponentPatterRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.CharacterComponent", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "ComponentId");

                    b.HasIndex("ComponentId");

                    b.ToTable("CharacterComponents");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.ComponentMaterial", b =>
                {
                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("ComponentId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ComponentMaterials");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.ComponentPattern", b =>
                {
                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("PatternId")
                        .HasColumnType("int");

                    b.HasKey("ComponentId", "PatternId");

                    b.HasIndex("PatternId");

                    b.ToTable("ComponentPatterns");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.MaterialPattern", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("PatternId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "PatternId");

                    b.HasIndex("PatternId");

                    b.ToTable("MaterialPatterns");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Pattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialDropChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patterns");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.CharacterComponent", b =>
                {
                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Character", "Character")
                        .WithMany("CharacterComponents")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Component", "Component")
                        .WithMany("CharacterComponents")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.ComponentMaterial", b =>
                {
                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Component", "Component")
                        .WithMany("ComponentMaterials")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Material", "Material")
                        .WithMany("ComponentMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.ComponentPattern", b =>
                {
                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Component", "Component")
                        .WithMany("ComponentPatterns")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Pattern", "Pattern")
                        .WithMany("ComponentPatterns")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.JoinTables.MaterialPattern", b =>
                {
                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Material", "Material")
                        .WithMany("MaterialPatterns")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TfdThreeTier.BuisnessLogic.Entities.Pattern", "Pattern")
                        .WithMany("MaterialPatterns")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Character", b =>
                {
                    b.Navigation("CharacterComponents");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Component", b =>
                {
                    b.Navigation("CharacterComponents");

                    b.Navigation("ComponentMaterials");

                    b.Navigation("ComponentPatterns");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Material", b =>
                {
                    b.Navigation("ComponentMaterials");

                    b.Navigation("MaterialPatterns");
                });

            modelBuilder.Entity("TfdThreeTier.BuisnessLogic.Entities.Pattern", b =>
                {
                    b.Navigation("ComponentPatterns");

                    b.Navigation("MaterialPatterns");
                });
#pragma warning restore 612, 618
        }
    }
}
